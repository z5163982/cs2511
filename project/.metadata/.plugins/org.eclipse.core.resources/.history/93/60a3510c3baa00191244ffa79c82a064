package unsw.dungeon;

public class Enemy extends Entity implements EnemyObserver{
	private Dungeon dungeon;
	private EnemyState state; 
	
	public Enemy(Dungeon dungeon, int x, int y) {
		super(x, y);
		this.dungeon = dungeon;
		this.state = new AttackState();
	}
    
	public EnemyState getState() { 
		return state;
	}
    
    public EnemyState Run() {
		return state = state.Run();
	}
	
	public EnemyState Attack() {
		return state =  state.Attack();
	}
	
	private void Move() {
		int x = dungeon.getPlayer().getX();
		int y = dungeon.getPlayer().getY();
		if (state instanceof RunState) {
			dungeon.getPlayer().getX();
		}
		if (state instanceof AttackState) {
			
		}
	}

	@Override
	public void update(Player p) {
		if (p.getState() instanceof VincibleState)
			Attack();
		else
			Run();
		Move();
	}

	
	
}
